companyCode: TTIC
state: FL
product: HO3
name: cancelNotice
active: true
events:
  - harmony.policy.cancelNoticeRequested 
inputFields:
  policyTransactionId: ${it.input.policyTransactionId}
lookupFields:
  - name: policyDetails
    type: rpc
    rpcConfig:
      routingKey: harmony.policy.retrievePolicyData
      message:
        policyTransactionId: ${it.inputFields.policyTransactionId}
  - name: toEmail
    type: rest
    restConfig:
      method: get
      endpoint: http://policy-data
      path: /policies/${it.lookupFields.policyDetails.transaction.policyNumber}/emailAddresses
calculatedFields:
  - name: policyNumber
    equation: ${it.lookupFields.policyDetails.transaction.policyNumber}
  - name: policyHolders
    equation: ${it.lookupFields.policyDetails.transaction.policyHolders}
  - name: firstName
    equation: ${it.calculatedFields.policyHolders[0].firstName}
  - name: lastName
    equation: ${it.calculatedFields.policyHolders[0].lastName}
  - name: transactionType
    equation: ${it.lookupFields.policyDetails.transaction.transactionType}
packetConfigs:
  - packetName: cancelNotice
    args:
      policyTransactionId: ${it.inputFields.policyTransactionId}
emailConfigs:
  - templateName: cancelNotice.html
    fromName: TypTap
    fromEmail: contact@typtap.com
    subject: ""
    body: ""
    toEmail: "${(['Pending Underwriting Cancellation', 'Pending Underwriting Non-Renewal'].includes(it.calculatedFields.transactionType.toLowerCase())) ? Array.of('underwriting@typtap.com') : it.lookupFields.toEmail}"
    toName: Print Shop
    variables:
      - key: POLICY_NUMBER
        value: ${it.calculatedFields.policyNumber}
      - key: POLICYHOLDER1_FIRSTNAME
        value: ${it.calculatedFields.firstName}
      - key: POLICYHOLDER1_LASTNAME
        value: ${it.calculatedFields.lastName}
    attachments: ${it.pdfs}
